apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'jacoco-android'

android {
    signingConfigs {
        release {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
        }
    }
    compileSdkVersion 26
    buildToolsVersion "26.0.0"
    defaultConfig {
        def googleKey = 'AIzaSyCcgW5x7Y5TYjak-H2Ad29rpl7OV0Myxt4'
        buildConfigField 'String', 'OPEN_WEATHER_MAP_API_KEY', '\"c3ebefdb656161082df40c099ddf1977\"'
        buildConfigField 'String', 'GOOGLE_API_KEY', "\"$googleKey\""
        manifestPlaceholders = [google_key: googleKey]
        applicationId "com.example.kimichael.yamblz_forecast"
        minSdkVersion 19
        targetSdkVersion 26
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
    }
    buildTypes {
        release {
            minifyEnabled true
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            debuggable true
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties'
    }
}
jacocoAndroidUnitTestReport {
    excludes += [
            //dagger's class
            '**/*_Factory*.*',
            '**/*_Provide*.*',
            '**/*_MembersInjector*.*',
            '**/*AppComponent*.*',
            '**/di/**/*.*',
            //butterknife
            '**/*_ViewBinding*.*',
            //pojo
            '**/common/**/*.*',
            '**/response/**/*.*',
            '**/*Request*.*',
            //holder, fragment, activities
            '**/*Holder*.*',
            '**/*Fragment*.*',
            '**/*Activity*.*',
            '**/*Adapter*.*',
            '**/*Service*.*',
            '**/*App*.*',
            //storIO
            '**/*SQLiteTypeMapping*.*',
            '**/*Table*.*',

    ]
    csv.enabled false
    html.enabled true
    xml.enabled false
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })


    compile libraries.supportAppCompat
    compile libraries.supportDesign
    compile libraries.supportSupport
    compile libraries.supportPreference

    testCompile libraries.junit

    compile libraries.dagger
    annotationProcessor libraries.daggerCompiler
    provided libraries.daggerAnnotations

    compile libraries.retrofit

    compile libraries.rxJava1
    compile libraries.rxJava
    compile libraries.rxAndroid
    compile libraries.rxBinding
    compile libraries.rxBindingV4
    compile libraries.rxBindingV7

    compile libraries.butterknife
    annotationProcessor libraries.butterknifeCompiler

    compile libraries.gson

    compile libraries.retrofitRxAdapter
    compile libraries.retrofitConverter
    compile libraries.okHttpInterceptor

    //  compile libraries.apacheCommons

    compile libraries.firebaseJobDispatcher

    debugCompile libraries.leakCanary
    releaseCompile libraries.leakCanaryNoOp
    testCompile libraries.leakCanaryNoOp

    compile libraries.timber

    compile libraries.storeIO
    annotationProcessor libraries.storeIOCompiler
    compile libraries.storeIOAnnotations

    compile libraries.googlePlay

    androidTestCompile(libraries.espressoContrib) {
        exclude group: 'com.android.support'
    }
    androidTestCompile(libraries.espressoCore) {
        exclude group: 'com.android.support'
    }

    testCompile libraries.robolectric
    testCompile libraries.mockito

}
